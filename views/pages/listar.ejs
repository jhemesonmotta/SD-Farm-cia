<!DOCTYPE html>
<html lang="pt-br">

<head>
  <% include ../partials/head.ejs %>
</head>

<body id="body-loaded">
        <div class="container">
            <div class="col-md-12">
                <h2 id="ola">Medicamentos Existentes</h2>
            </div>
            <hr>
    
            <div id="list" class="row">
     
                <div class="table-responsive col-md-12">
                    <table class="table table-striped" cellspacing="0" cellpadding="0">
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>Nome</th>
                                <th>Local</th>
                                <th>Via</th>
                                <th>Dono</th>
                        </thead>
                        <tbody>
                            <% retorno.listaRemedios.forEach(function(remedio) { %>
                                    <tr>
                                        <td><%= remedio.id %></td>
                                        <td><%= remedio.nome %></td>
                                        <td><%= remedio.localAcao %></td>
                                        <td><%= remedio.viaAdministracao %></td>
                                        <td><%= remedio.dono.nome %></td>
                                    </tr>
                            <% }); %>
                        </tbody>
                    </table>
                </div>
            </div>

            <p id="dataReturned" style="display: none;">
                <%= retorno.toString %>
            </p>
    
            <a href="/"><button type="button" class=" btn btn-secundary" >Voltar</button></a>
        </div>

        <script src="https://cdnjs.cloudflare.com/ajax/libs/peerjs/0.3.18/peer.min.js"></script>
        <script type="text/javascript">
            (function () {
                var destId = localStorage.getItem("meuIdDoPeer");

                var peer = null; // own peer object
                var peerId = null;
                var conn = null;
                var oppositePeer = { // Opposite peer object
                    peerId: null
                };

                var msg = null;
                var command = null;
                var status = document.getElementById("status");
                var message = document.getElementById("message");
                
                // get first "GET style" parameter from href
                // would have been easier to just use location.hash
                function getUrlParam(name) {
                    name = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");
                    var regexS = "[\\?&]" + name + "=([^&#]*)";
                    var regex = new RegExp(regexS);
                    var results = regex.exec(window.location.href);
                    if (results == null)
                        return null;
                    else
                        return results[1];
                };

                function ready() {
                    // Receive data (only messages)
                    conn.on('data', function (data) {
                        localStorage.setItem("currentSharedData", data);
                        console.log("\n\n");
                        console.log(data);
                        console.log("\n\n");
                    });

                    // Handle close or error
                    conn.on('close', function () {
                        status.innerHTML = "Connection closed";
                    });
                    peer.on('disconnected', function () {
                        alert("Connection has been lost.");
                        peer.reconnect();
                    });
                    peer.on('error', function (err) {
                        alert('' + err)
                    });

                    // Check URL for comamnds that should be sent right away
                    command = getUrlParam("command");
                    if (command)
                        conn.send(command);
                };

                function initialize() {
                    // Create own peer object with connection to shared PeerJS server
                    peer = new Peer(null, {
                        debug: 2
                    });

                    peer.on('open', function (id) {
                        peerId = id;
                        console.log('ID: ' + id);
                    });

                    peer.on('error', function (err) {
                        if (err.type === 'unavailable-id') {
                            alert('' + err);
                            peer.reconnect();
                        }
                        else
                            alert('' + err);
                    });
                };

                function join() {
                    initialize();
                    peer.on('open', function () {

                        if (conn) {
                            conn.close();
                        }

                        if (peer) {
                            peer.destroy();
                        }

                        // pede para se conectar ao peer definido na variável destId
                        conn = peer.connect(destId, {
                            reliable: true
                        });

                        // assim que a  conexão é aberta, executa isso
                        conn.on('open', function () {
                            oppositePeer.peerId = destId;
                            // status.innerHTML = "Connected to: " + destId;
                            console.log("Connected to: " + destId);
                            var retorno = $("#dataReturned").text();
                            conn.send(retorno);
                            console.log("sent: " + retorno + "to connected peer");
                            ready();
                        });
                    });
                };

                if (conn) {
                    ready();
                }
                else {
                    join();
                }

                document.getElementById("dataReturned").onload = function() {
                    join();
                };
            })();
        </script>
    </body>
</html>