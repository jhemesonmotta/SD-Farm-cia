<!DOCTYPE html>
<html lang="pt-br">

<head>
  <% include ../partials/head.ejs %>
</head>

<body>
    
        <div class="container">
            <div class="col-md-12">
                <h2 id="ola">Envie seu remédio</h2>
            </div>
            <hr>
            
            <div class="form-group col-md-3">
                    <label for="exampleSelect1">Remédio</label>
                    <select class="form-control" id="exampleSelect1">
                      <option>Dorflex</option>
                      <option>Dipirona</option>
                      <option>3</option>
                      <option>4</option>
                      <option>5</option>
                    </select>
            </div>
    
            <div class=" form-group row">
                <div class=" qt col-3">
                    <label for="exampleSelect1">Quantidade</label>
                    <input class="form-control" type="number" value="0" id="example-number-input">
                </div>
            </div>
    
            <div class="form-group col-md-3">
                    <label for="exampleSelect1">Destinatário</label>
                    <select class="form-control" id="exampleSelect1">
                      <option>Algum</option>
                      <option>Dest 2</option>
                      <option>3</option>
                      <option>4</option>
                      <option>5</option>
                    </select>
            </div>
            
            <a href="../home/home.html"><button type="button" class=" qt btn btn-secundary" >Voltar</button></a>
    
            <button type="button" class=" btn btn-success" data-toggle="modal" data-target="#modalExemplo">
            Enviar remédio
            </button>
            
            <div class="modal fade" id="modalExemplo" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Atenção!</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Fechar">
                        <span aria-hidden="true">&times;</span>
                    </button>
                    </div>
                    <div class="modal-body">
                    Por motivos de segurança as informações adicionadas até agora sobre o remédio novo não poderão ser editadas
                    nem removidas posteriormente.
                    <br>
                    Você aceita essas condições?
                    </div>
                    <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Não, fechar</button>
                    <button type="button" class="btn btn-success">Sim, estou ciente</button>
                    </div>
                </div>
                </div>
            </div>
            
        </div>


        <table class="control">
            <tr>
                <td>
                    <span style="font-weight: bold">ID: </span>
                    <input type="text" id="receiver-id" title="Input the ID from receive.html">
                    <button id="connect-button">Connect</button>
                </td>
                <td>
                    <input type="text" id="sendMessageBox" placeholder="Enter a message..." autofocus="true" />
                    <button type="button" id="sendButton">Send</button>
                </td>
            </tr>
            <tr>
                <td><div id="status" class="status"></div></td>
                <td><div class="message" id="message"></div></td>
            </tr>
        </table>

        <script src="https://cdnjs.cloudflare.com/ajax/libs/peerjs/0.3.18/peer.min.js"></script>
        <script type="text/javascript">
            (function () {

                var destId = "";

                var peer = null; // own peer object
                var peerId = null;
                var conn = null;
                var oppositePeer = {
                    peerId: null
                };
                var msg = null;
                var command = null;
                var recvIdInput = document.getElementById("receiver-id");
                var status = document.getElementById("status");
                var message = document.getElementById("message");
                var sendMessageBox = document.getElementById("sendMessageBox");
                var sendButton = document.getElementById("sendButton");

                // get first "GET style" parameter from href
                // would have been easier to just use location.hash
                function getUrlParam(name) {
                    name = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");
                    var regexS = "[\\?&]" + name + "=([^&#]*)";
                    var regex = new RegExp(regexS);
                    var results = regex.exec(window.location.href);
                    if (results == null)
                        return null;
                    else
                        return results[1];
                };

                function ready() {
                    // Recieve data (only messages)
                    conn.on('data', function (data) {
                        addMessage("<span class=\"peerMsg\">Peer:</span> " + data);
                    });

                    // Handle close or error
                    conn.on('close', function () {
                        status.innerHTML = "Connection closed";
                    });
                    peer.on('disconnected', function () {
                        alert("Connection has been lost.");
                        peer.reconnect();
                    });
                    peer.on('error', function (err) {
                        alert('' + err)
                    });

                    // Check URL for comamnds that should be sent right away
                    command = getUrlParam("command");
                    if (command)
                        conn.send(command);

                    var cueString = "<span class=\"cueMsg\">Cue: </span>";

                    // Listen for enter
                    sendMessageBox.onkeypress = function (e) {
                        var event = e || window.event;
                        var char = event.which || event.keyCode;
                        if (char == '13')
                            sendButton.click();
                    };
                    // Send message
                    sendButton.onclick = function () {
                        msg = sendMessageBox.value;
                        sendMessageBox.value = "";
                        conn.send(msg);
                        console.log("Sent: " + msg)
                        addMessage("<span class=\"selfMsg\">Self: </span> " + msg);
                    };
                };

                function initialize() {
                    // Create own peer object with connection to shared PeerJS server
                    peer = new Peer(null, {
                        debug: 2
                    });

                    peer.on('open', function (id) {
                        peerId = id;
                        console.log('ID: ' + id);
                    });
                    peer.on('error', function (err) {
                        if (err.type === 'unavailable-id') {
                            alert('' + err);
                            peer.reconnect();
                        }
                        else
                            alert('' + err);
                    });
                };

                function join() {
                    initialize();
                    peer.on('open', function () {

                        if (conn) {
                            conn.close();
                        }

                        if (peer) {
                            peer.destroy();
                        }
                        
                        destId = recvIdInput.value;

                        // Create connection to shared PeerJS server
                        conn = peer.connect(destId, {
                            reliable: true
                        });
                        conn.on('open', function () {
                            oppositePeer.peerId = destId;
                            status.innerHTML = "Connected to: " + destId;
                            console.log("Connected to: " + destId)
                            ready();
                        });
                    });
                };

                function addMessage(msg) {
                    var now = new Date();
                    var h = now.getHours();
                    var m = addZero(now.getMinutes());
                    var s = addZero(now.getSeconds());

                    if (h > 12)
                        h -= 12;
                    else if (h === 0)
                        h = 12;

                    function addZero(t) {
                        if (t < 10)
                            t = "0" + t;
                        return t;
                    };

                    message.innerHTML = "<br><span class=\"msg-time\">" + h + ":" + m + ":" + s + "</span>  -  " + msg + message.innerHTML;
                };

                if (conn) {
                    ready();
                }
                else {
                    join();
                }

                document.getElementById("connect-button").onclick = function() {
                    join();
                };
            })();
        </script>

        <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js" integrity="sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49" crossorigin="anonymous"></script>
        <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js" integrity="sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy" crossorigin="anonymous"></script>
    </body>

</html>